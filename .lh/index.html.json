{
    "sourceFile": "index.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 63,
            "patches": [
                {
                    "date": 1702453071977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1702453078620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,7 +5,7 @@\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n     <title>Document</title>\r\n </head>\r\n <body>\r\n-    \r\n+    <div\r\n </body>\r\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1702453087331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,13 @@\n+<!DOCTYPE html>\r\n+<html lang=\"en\">\r\n+<head>\r\n+    <meta charset=\"UTF-8\">\r\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n+    <title>Document</title>\r\n+</head>\r\n+<body>\r\n+    <div>\r\n+        \r\n+    </div>\r\n+</body>\r\n+</html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1702453093282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,13 @@\n+<!DOCTYPE html>\r\n+<html lang=\"en\">\r\n+<head>\r\n+    <meta charset=\"UTF-8\">\r\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n+    <title>Document</title>\r\n+</head>\r\n+<body>\r\n+    <div class=\"container\">\r\n+\r\n+    </div>\r\n+</body>\r\n+</html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1702453102590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,13 @@\n+<!DOCTYPE html>\r\n+<html lang=\"en\">\r\n+<head>\r\n+    <meta charset=\"UTF-8\">\r\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n+    <title>Document</title>\r\n+</head>\r\n+<body>\r\n+    <div class=\"container\">\r\n+        <div class=\"swipeable\"></div>\r\n+    </div>\r\n+</body>\r\n+</html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1702453128295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,47 +4,11 @@\n     <meta charset=\"UTF-8\">\r\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n     <title>Document</title>\r\n </head>\r\n+\r\n <body>\r\n     <div class=\"container\">\r\n         <div class=\"swipeable\"></div>\r\n     </div>\r\n </body>\r\n-</html>\n-<!DOCTYPE html>\r\n-<html lang=\"en\">\r\n-<head>\r\n-    <meta charset=\"UTF-8\">\r\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n-    <title>Document</title>\r\n-</head>\r\n-<body>\r\n-    <div class=\"container\">\r\n-\r\n-    </div>\r\n-</body>\r\n-</html>\n-<!DOCTYPE html>\r\n-<html lang=\"en\">\r\n-<head>\r\n-    <meta charset=\"UTF-8\">\r\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n-    <title>Document</title>\r\n-</head>\r\n-<body>\r\n-    <div>\r\n-        \r\n-    </div>\r\n-</body>\r\n-</html>\n-<!DOCTYPE html>\r\n-<html lang=\"en\">\r\n-<head>\r\n-    <meta charset=\"UTF-8\">\r\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n-    <title>Document</title>\r\n-</head>\r\n-<body>\r\n-    <div\r\n-</body>\r\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1702453138034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,13 @@\n     <meta charset=\"UTF-8\">\r\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n     <title>Document</title>\r\n </head>\r\n-\r\n+<style>\r\n+    body{\r\n+        background-color: black;\r\n+    }\r\n+</style>\r\n <body>\r\n     <div class=\"container\">\r\n         <div class=\"swipeable\"></div>\r\n     </div>\r\n"
                },
                {
                    "date": 1702453152057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,11 @@\n </head>\r\n <style>\r\n     body{\r\n         background-color: black;\r\n+        display: grid;\r\n+        place-content: center\r\n+        ;\r\n     }\r\n </style>\r\n <body>\r\n     <div class=\"container\">\r\n"
                },
                {
                    "date": 1702453160020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,13 @@\n <style>\r\n     body{\r\n         background-color: black;\r\n         display: grid;\r\n-        place-content: center\r\n-        ;\r\n+        place-content: center;\r\n     }\r\n+    .container{\r\n+        \r\n+    }\r\n </style>\r\n <body>\r\n     <div class=\"container\">\r\n         <div class=\"swipeable\"></div>\r\n"
                },
                {
                    "date": 1702453165702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,10 @@\n         display: grid;\r\n         place-content: center;\r\n     }\r\n     .container{\r\n-        \r\n+        height: 100px;\r\n+        width: ;\r\n     }\r\n </style>\r\n <body>\r\n     <div class=\"container\">\r\n"
                },
                {
                    "date": 1702453171500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,10 @@\n         place-content: center;\r\n     }\r\n     .container{\r\n         height: 100px;\r\n-        width: ;\r\n+        width: 300px;\r\n+        background-color: white;\r\n     }\r\n </style>\r\n <body>\r\n     <div class=\"container\">\r\n"
                },
                {
                    "date": 1702453181049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n     <title>Document</title>\r\n </head>\r\n <style>\r\n     body{\r\n+        height: 100vh;\r\n         background-color: black;\r\n         display: grid;\r\n         place-content: center;\r\n     }\r\n"
                },
                {
                    "date": 1702453188720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n         height: 100vh;\r\n         background-color: black;\r\n         display: grid;\r\n         place-content: center;\r\n+        overflow: ;\r\n     }\r\n     .container{\r\n         height: 100px;\r\n         width: 300px;\r\n"
                },
                {
                    "date": 1702453194268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n         height: 100vh;\r\n         background-color: black;\r\n         display: grid;\r\n         place-content: center;\r\n-        overflow: ;\r\n+        overflow:hidden;\r\n     }\r\n     .container{\r\n         height: 100px;\r\n         width: 300px;\r\n"
                },
                {
                    "date": 1702453203741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n         height: 100px;\r\n         width: 300px;\r\n         background-color: white;\r\n     }\r\n+    .\r\n </style>\r\n <body>\r\n     <div class=\"container\">\r\n         <div class=\"swipeable\"></div>\r\n"
                },
                {
                    "date": 1702453212167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,11 @@\n         height: 100px;\r\n         width: 300px;\r\n         background-color: white;\r\n     }\r\n-    .\r\n+    .swipeable{\r\n+        height: 100;\r\n+    }\r\n </style>\r\n <body>\r\n     <div class=\"container\">\r\n         <div class=\"swipeable\"></div>\r\n"
                },
                {
                    "date": 1702453219206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,11 @@\n         width: 300px;\r\n         background-color: white;\r\n     }\r\n     .swipeable{\r\n-        height: 100;\r\n+        height: 100%;\r\n+        width: 100%;\r\n+        background-color: red;\r\n     }\r\n </style>\r\n <body>\r\n     <div class=\"container\">\r\n"
                },
                {
                    "date": 1702453318692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n     .swipeable{\r\n         height: 100%;\r\n         width: 100%;\r\n         background-color: red;\r\n+        transition: transform 0.3s ease;\r\n     }\r\n </style>\r\n <body>\r\n     <div class=\"container\">\r\n"
                },
                {
                    "date": 1702453323878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,6 +28,9 @@\n <body>\r\n     <div class=\"container\">\r\n         <div class=\"swipeable\"></div>\r\n     </div>\r\n+    <script>\r\n+        \r\n+    </script>\r\n </body>\r\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1702453465981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,51 @@\n     <div class=\"container\">\r\n         <div class=\"swipeable\"></div>\r\n     </div>\r\n     <script>\r\n+        document.addEventListener('DOMContentLoaded', function() {\r\n+            var swipeable = document.querySelector('.swipeable');\r\n+            var startX, currentX;\r\n+            var isDragging = false; // To track if mouse drag is active\r\n         \r\n+            // Function to handle the start of a swipe/drag\r\n+            function startHandler(e) {\r\n+                startX = (e.touches ? e.touches[0].clientX : e.clientX);\r\n+                isDragging = true;\r\n+            }\r\n+        \r\n+            // Function to handle the move of a swipe/drag\r\n+            function moveHandler(e) {\r\n+                if (!isDragging) return;\r\n+                currentX = (e.touches ? e.touches[0].clientX : e.clientX);\r\n+                var deltaX = currentX - startX;\r\n+                swipeable.style.transform = `translateX(${deltaX}px)`;\r\n+            }\r\n+        \r\n+            // Function to handle the end of a swipe/drag\r\n+            function endHandler(e) {\r\n+                if (!isDragging) return;\r\n+                isDragging = false;\r\n+                if (currentX - startX > 100) {\r\n+                    // Swiped/dragged right\r\n+                    console.log('Swipe/drag right action, like archive');\r\n+                } else if (startX - currentX > 100) {\r\n+                    // Swiped/dragged left\r\n+                    console.log('Swipe/drag left action, like delete');\r\n+                }\r\n+                swipeable.style.transform = ''; // Reset position\r\n+            }\r\n+        \r\n+            // Touch events\r\n+            swipeable.addEventListener('touchstart', startHandler);\r\n+            swipeable.addEventListener('touchmove', moveHandler);\r\n+            swipeable.addEventListener('touchend', endHandler);\r\n+        \r\n+            // Mouse events\r\n+            swipeable.addEventListener('mousedown', startHandler);\r\n+            document.addEventListener('mousemove', moveHandler);\r\n+            document.addEventListener('mouseup', endHandler);\r\n+        });\r\n+        \r\n     </script>\r\n </body>\r\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1702453474146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,12 +55,9 @@\n                 isDragging = false;\r\n                 if (currentX - startX > 100) {\r\n                     // Swiped/dragged right\r\n                     console.log('Swipe/drag right action, like archive');\r\n-                } else if (startX - currentX > 100) {\r\n-                    // Swiped/dragged left\r\n-                    console.log('Swipe/drag left action, like delete');\r\n-                }\r\n+                } \r\n                 swipeable.style.transform = ''; // Reset position\r\n             }\r\n         \r\n             // Touch events\r\n"
                },
                {
                    "date": 1702453483218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,12 @@\n                 isDragging = false;\r\n                 if (currentX - startX > 100) {\r\n                     // Swiped/dragged right\r\n                     console.log('Swipe/drag right action, like archive');\r\n-                } \r\n+                } else if (startX - currentX > 100) {\r\n+                    // Swiped/dragged left\r\n+                    console.log('Swipe/drag left action, like delete');\r\n+                }\r\n                 swipeable.style.transform = ''; // Reset position\r\n             }\r\n         \r\n             // Touch events\r\n"
                },
                {
                    "date": 1702453572814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n     .container{\r\n         height: 100px;\r\n         width: 300px;\r\n         background-color: white;\r\n+        overflow: hidden;\r\n     }\r\n     .swipeable{\r\n         height: 100%;\r\n         width: 100%;\r\n"
                },
                {
                    "date": 1702453741728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n             function moveHandler(e) {\r\n                 if (!isDragging) return;\r\n                 currentX = (e.touches ? e.touches[0].clientX : e.clientX);\r\n                 var deltaX = currentX - startX;\r\n-                swipeable.style.transform = `translateX(${deltaX}px)`;\r\n+                swipeable.style.transform = `100px`;\r\n             }\r\n         \r\n             // Function to handle the end of a swipe/drag\r\n             function endHandler(e) {\r\n"
                },
                {
                    "date": 1702453778013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n             function moveHandler(e) {\r\n                 if (!isDragging) return;\r\n                 currentX = (e.touches ? e.touches[0].clientX : e.clientX);\r\n                 var deltaX = currentX - startX;\r\n-                swipeable.style.transform = `100px`;\r\n+                swipeable.style.transform = `translateX(${deltaX}px)`;\r\n             }\r\n         \r\n             // Function to handle the end of a swipe/drag\r\n             function endHandler(e) {\r\n"
                },
                {
                    "date": 1702454004375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,9 @@\n         document.addEventListener('DOMContentLoaded', function() {\r\n             var swipeable = document.querySelector('.swipeable');\r\n             var startX, currentX;\r\n             var isDragging = false; // To track if mouse drag is active\r\n+            const maxSwipeDistance = 100;\r\n         \r\n             // Function to handle the start of a swipe/drag\r\n             function startHandler(e) {\r\n                 startX = (e.touches ? e.touches[0].clientX : e.clientX);\r\n"
                },
                {
                    "date": 1702454022100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,10 @@\n             function moveHandler(e) {\r\n                 if (!isDragging) return;\r\n                 currentX = (e.touches ? e.touches[0].clientX : e.clientX);\r\n                 var deltaX = currentX - startX;\r\n+                if (deltaX > maxSwipeDistance) deltaX = maxSwipeDistance;\r\n+        else if (deltaX < -maxSwipeDistance) deltaX = -maxSwipeDistance;\r\n                 swipeable.style.transform = `translateX(${deltaX}px)`;\r\n             }\r\n         \r\n             // Function to handle the end of a swipe/drag\r\n"
                },
                {
                    "date": 1702454034983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,83 +1,83 @@\n <!DOCTYPE html>\r\n <html lang=\"en\">\r\n-<head>\r\n-    <meta charset=\"UTF-8\">\r\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n-    <title>Document</title>\r\n-</head>\r\n-<style>\r\n-    body{\r\n-        height: 100vh;\r\n-        background-color: black;\r\n-        display: grid;\r\n-        place-content: center;\r\n-        overflow:hidden;\r\n-    }\r\n-    .container{\r\n-        height: 100px;\r\n-        width: 300px;\r\n-        background-color: white;\r\n-        overflow: hidden;\r\n-    }\r\n-    .swipeable{\r\n-        height: 100%;\r\n-        width: 100%;\r\n-        background-color: red;\r\n-        transition: transform 0.3s ease;\r\n-    }\r\n-</style>\r\n-<body>\r\n-    <div class=\"container\">\r\n-        <div class=\"swipeable\"></div>\r\n-    </div>\r\n-    <script>\r\n-        document.addEventListener('DOMContentLoaded', function() {\r\n-            var swipeable = document.querySelector('.swipeable');\r\n-            var startX, currentX;\r\n-            var isDragging = false; // To track if mouse drag is active\r\n-            const maxSwipeDistance = 100;\r\n-        \r\n-            // Function to handle the start of a swipe/drag\r\n-            function startHandler(e) {\r\n-                startX = (e.touches ? e.touches[0].clientX : e.clientX);\r\n-                isDragging = true;\r\n-            }\r\n-        \r\n-            // Function to handle the move of a swipe/drag\r\n-            function moveHandler(e) {\r\n-                if (!isDragging) return;\r\n-                currentX = (e.touches ? e.touches[0].clientX : e.clientX);\r\n-                var deltaX = currentX - startX;\r\n-                if (deltaX > maxSwipeDistance) deltaX = maxSwipeDistance;\r\n-        else if (deltaX < -maxSwipeDistance) deltaX = -maxSwipeDistance;\r\n-                swipeable.style.transform = `translateX(${deltaX}px)`;\r\n-            }\r\n-        \r\n-            // Function to handle the end of a swipe/drag\r\n-            function endHandler(e) {\r\n-                if (!isDragging) return;\r\n-                isDragging = false;\r\n-                if (currentX - startX > 100) {\r\n-                    // Swiped/dragged right\r\n-                    console.log('Swipe/drag right action, like archive');\r\n-                } else if (startX - currentX > 100) {\r\n-                    // Swiped/dragged left\r\n-                    console.log('Swipe/drag left action, like delete');\r\n+    <head>\r\n+        <meta charset=\"UTF-8\" />\r\n+        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n+        <title>Document</title>\r\n+    </head>\r\n+    <style>\r\n+        body {\r\n+            height: 100vh;\r\n+            background-color: black;\r\n+            display: grid;\r\n+            place-content: center;\r\n+            overflow: hidden;\r\n+        }\r\n+        .container {\r\n+            height: 100px;\r\n+            width: 300px;\r\n+            background-color: white;\r\n+            overflow: hidden;\r\n\\ No newline at end of file\n+        }\r\n+        .swipeable {\r\n+            height: 100%;\r\n+            width: 100%;\r\n+            background-color: red;\r\n+            transition: transform 0.3s ease;\r\n+        }\r\n+    </style>\r\n+    <body>\r\n+        <div class=\"container\">\r\n+            <div class=\"swipeable\"></div>\r\n+        </div>\r\n+        <script>\r\n+            document.addEventListener(\"DOMContentLoaded\", function () {\r\n+                var swipeable = document.querySelector(\".swipeable\");\r\n+                var startX, currentX;\r\n+                var isDragging = false; // To track if mouse drag is active\r\n+                const maxSwipeDistance = 100;\r\n+\r\n+                // Function to handle the start of a swipe/drag\r\n+                function startHandler(e) {\r\n+                    startX = e.touches ? e.touches[0].clientX : e.clientX;\r\n+                    isDragging = true;\r\n                 }\r\n-                swipeable.style.transform = ''; // Reset position\r\n-            }\r\n-        \r\n-            // Touch events\r\n-            swipeable.addEventListener('touchstart', startHandler);\r\n-            swipeable.addEventListener('touchmove', moveHandler);\r\n-            swipeable.addEventListener('touchend', endHandler);\r\n-        \r\n-            // Mouse events\r\n-            swipeable.addEventListener('mousedown', startHandler);\r\n-            document.addEventListener('mousemove', moveHandler);\r\n-            document.addEventListener('mouseup', endHandler);\r\n-        });\r\n-        \r\n-    </script>\r\n-</body>\r\n-</html>\n+\r\n+                // Function to handle the move of a swipe/drag\r\n+                function moveHandler(e) {\r\n+                    if (!isDragging) return;\r\n+                    currentX = e.touches ? e.touches[0].clientX : e.clientX;\r\n+                    var deltaX = currentX - startX;\r\n+                    if (deltaX > maxSwipeDistance) deltaX = maxSwipeDistance;\r\n+                    else if (deltaX < -maxSwipeDistance)\r\n+                        deltaX = -maxSwipeDistance;\r\n+                    swipeable.style.transform = `translateX(${deltaX}px)`;\r\n+                }\r\n+\r\n+                // Function to handle the end of a swipe/drag\r\n+                function endHandler(e) {\r\n+                    if (!isDragging) return;\r\n+                    isDragging = false;\r\n+                    if (currentX - startX > 100) {\r\n+                        // Swiped/dragged right\r\n+                        console.log(\"Swipe/drag right action, like archive\");\r\n+                    } else if (startX - currentX > 100) {\r\n+                        // Swiped/dragged left\r\n+                        console.log(\"Swipe/drag left action, like delete\");\r\n+                    }\r\n+                    swipeable.style.transform = \"\"; // Reset position\r\n+                }\r\n+\r\n+                // Touch events\r\n+                swipeable.addEventListener(\"touchstart\", startHandler);\r\n+                swipeable.addEventListener(\"touchmove\", moveHandler);\r\n+                swipeable.addEventListener(\"touchend\", endHandler);\r\n+\r\n+                // Mouse events\r\n+                swipeable.addEventListener(\"mousedown\", startHandler);\r\n+                document.addEventListener(\"mousemove\", moveHandler);\r\n+                document.addEventListener(\"mouseup\", endHandler);\r\n+            });\r\n+        </script>\r\n+    </body>\r\n+</html>\r\n"
                },
                {
                    "date": 1702454052564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n                     } else if (startX - currentX > 100) {\r\n                         // Swiped/dragged left\r\n                         console.log(\"Swipe/drag left action, like delete\");\r\n                     }\r\n-                    swipeable.style.transform = \"\"; // Reset position\r\n+                    <!-- swipeable.style.transform = \"\"; // Reset position -->\r\n                 }\r\n \r\n                 // Touch events\r\n                 swipeable.addEventListener(\"touchstart\", startHandler);\r\n@@ -79,5 +79,5 @@\n                 document.addEventListener(\"mouseup\", endHandler);\r\n             });\r\n         </script>\r\n     </body>\r\n-</html>\n\\ No newline at end of file\n+</html>\r\n"
                },
                {
                    "date": 1702454169275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,16 +57,18 @@\n                 // Function to handle the end of a swipe/drag\r\n                 function endHandler(e) {\r\n                     if (!isDragging) return;\r\n                     isDragging = false;\r\n-                    if (currentX - startX > 100) {\r\n-                        // Swiped/dragged right\r\n-                        console.log(\"Swipe/drag right action, like archive\");\r\n-                    } else if (startX - currentX > 100) {\r\n-                        // Swiped/dragged left\r\n-                        console.log(\"Swipe/drag left action, like delete\");\r\n+            \r\n+                    // Keep the element at its swiped position or reset\r\n+                    if (Math.abs(currentX - startX) >= maxSwipeDistance) {\r\n+                        // Keep the element at its maximum swiped position\r\n+                        let finalTransform = (currentX - startX > 0) ? `translateX(${maxSwipeDistance}px)` : `translateX(${-maxSwipeDistance}px)`;\r\n+                        swipeable.style.transform = finalTransform;\r\n+                    } else {\r\n+                        // Reset position if swipe was not long enough\r\n+                        swipeable.style.transform = '';\r\n                     }\r\n-                    <!-- swipeable.style.transform = \"\"; // Reset position -->\r\n                 }\r\n \r\n                 // Touch events\r\n                 swipeable.addEventListener(\"touchstart\", startHandler);\r\n"
                },
                {
                    "date": 1702454209548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,17 +57,20 @@\n                 // Function to handle the end of a swipe/drag\r\n                 function endHandler(e) {\r\n                     if (!isDragging) return;\r\n                     isDragging = false;\r\n-            \r\n+\r\n                     // Keep the element at its swiped position or reset\r\n                     if (Math.abs(currentX - startX) >= maxSwipeDistance) {\r\n                         // Keep the element at its maximum swiped position\r\n-                        let finalTransform = (currentX - startX > 0) ? `translateX(${maxSwipeDistance}px)` : `translateX(${-maxSwipeDistance}px)`;\r\n+                        let finalTransform =\r\n+                            currentX - startX > 0\r\n+                                ? `translateX(${maxSwipeDistance}px)`\r\n+                                : `translateX(${-maxSwipeDistance}px)`;\r\n                         swipeable.style.transform = finalTransform;\r\n                     } else {\r\n                         // Reset position if swipe was not long enough\r\n-                        swipeable.style.transform = '';\r\n+                        swipeable.style.transform = \"\";\r\n                     }\r\n                 }\r\n \r\n                 // Touch events\r\n"
                },
                {
                    "date": 1702751545975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,76 @@\n+<!DOCTYPE html>\r\n+<html lang=\"en\">\r\n+    <head>\r\n+        <meta charset=\"UTF-8\" />\r\n+        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n+        <title>Document</title>\r\n+    </head>\r\n+    <style>\r\n+        body {\r\n+            height: 100vh;\r\n+            background-color: black;\r\n+            display: grid;\r\n+            place-content: center;\r\n+            overflow: hidden;\r\n+        }\r\n+    </style>\r\n+    <body>\r\n+        <div class=\"container\">\r\n+            <div class=\"swipeable\"></div>\r\n+        </div>\r\n+        <script>\r\n+            document.addEventListener(\"DOMContentLoaded\", function () {\r\n+                var swipeable = document.querySelector(\".swipeable\");\r\n+                var startX, currentX;\r\n+                var isDragging = false; // To track if mouse drag is active\r\n+                const maxSwipeDistance = 100;\r\n+\r\n+                // Function to handle the start of a swipe/drag\r\n+                function startHandler(e) {\r\n+                    startX = e.touches ? e.touches[0].clientX : e.clientX;\r\n+                    isDragging = true;\r\n+                }\r\n+\r\n+                // Function to handle the move of a swipe/drag\r\n+                function moveHandler(e) {\r\n+                    if (!isDragging) return;\r\n+                    currentX = e.touches ? e.touches[0].clientX : e.clientX;\r\n+                    var deltaX = currentX - startX;\r\n+                    if (deltaX > maxSwipeDistance) deltaX = maxSwipeDistance;\r\n+                    else if (deltaX < -maxSwipeDistance)\r\n+                        deltaX = -maxSwipeDistance;\r\n+                    swipeable.style.transform = `translateX(${deltaX}px)`;\r\n+                }\r\n+\r\n+                // Function to handle the end of a swipe/drag\r\n+                function endHandler(e) {\r\n+                    if (!isDragging) return;\r\n+                    isDragging = false;\r\n+\r\n+                    // Keep the element at its swiped position or reset\r\n+                    if (Math.abs(currentX - startX) >= maxSwipeDistance) {\r\n+                        // Keep the element at its maximum swiped position\r\n+                        let finalTransform =\r\n+                            currentX - startX > 0\r\n+                                ? `translateX(${maxSwipeDistance}px)`\r\n+                                : `translateX(${-maxSwipeDistance}px)`;\r\n+                        swipeable.style.transform = finalTransform;\r\n+                    } else {\r\n+                        // Reset position if swipe was not long enough\r\n+                        swipeable.style.transform = \"\";\r\n+                    }\r\n+                }\r\n+\r\n+                // Touch events\r\n+                swipeable.addEventListener(\"touchstart\", startHandler);\r\n+                swipeable.addEventListener(\"touchmove\", moveHandler);\r\n+                swipeable.addEventListener(\"touchend\", endHandler);\r\n+\r\n+                // Mouse events\r\n+                swipeable.addEventListener(\"mousedown\", startHandler);\r\n+                document.addEventListener(\"mousemove\", moveHandler);\r\n+                document.addEventListener(\"mouseup\", endHandler);\r\n+            });\r\n+        </script>\r\n+    </body>\r\n+</html>\r\n"
                },
                {
                    "date": 1702751553546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,59 +18,9 @@\n         <div class=\"container\">\r\n             <div class=\"swipeable\"></div>\r\n         </div>\r\n         <script>\r\n-            document.addEventListener(\"DOMContentLoaded\", function () {\r\n-                var swipeable = document.querySelector(\".swipeable\");\r\n-                var startX, currentX;\r\n-                var isDragging = false; // To track if mouse drag is active\r\n-                const maxSwipeDistance = 100;\r\n-\r\n-                // Function to handle the start of a swipe/drag\r\n-                function startHandler(e) {\r\n-                    startX = e.touches ? e.touches[0].clientX : e.clientX;\r\n-                    isDragging = true;\r\n-                }\r\n-\r\n-                // Function to handle the move of a swipe/drag\r\n-                function moveHandler(e) {\r\n-                    if (!isDragging) return;\r\n-                    currentX = e.touches ? e.touches[0].clientX : e.clientX;\r\n-                    var deltaX = currentX - startX;\r\n-                    if (deltaX > maxSwipeDistance) deltaX = maxSwipeDistance;\r\n-                    else if (deltaX < -maxSwipeDistance)\r\n-                        deltaX = -maxSwipeDistance;\r\n-                    swipeable.style.transform = `translateX(${deltaX}px)`;\r\n-                }\r\n-\r\n-                // Function to handle the end of a swipe/drag\r\n-                function endHandler(e) {\r\n-                    if (!isDragging) return;\r\n-                    isDragging = false;\r\n-\r\n-                    // Keep the element at its swiped position or reset\r\n-                    if (Math.abs(currentX - startX) >= maxSwipeDistance) {\r\n-                        // Keep the element at its maximum swiped position\r\n-                        let finalTransform =\r\n-                            currentX - startX > 0\r\n-                                ? `translateX(${maxSwipeDistance}px)`\r\n-                                : `translateX(${-maxSwipeDistance}px)`;\r\n-                        swipeable.style.transform = finalTransform;\r\n-                    } else {\r\n-                        // Reset position if swipe was not long enough\r\n-                        swipeable.style.transform = \"\";\r\n-                    }\r\n-                }\r\n-\r\n-                // Touch events\r\n-                swipeable.addEventListener(\"touchstart\", startHandler);\r\n-                swipeable.addEventListener(\"touchmove\", moveHandler);\r\n-                swipeable.addEventListener(\"touchend\", endHandler);\r\n-\r\n-                // Mouse events\r\n-                swipeable.addEventListener(\"mousedown\", startHandler);\r\n-                document.addEventListener(\"mousemove\", moveHandler);\r\n-                document.addEventListener(\"mouseup\", endHandler);\r\n+            \r\n             });\r\n         </script>\r\n     </body>\r\n </html>\r\n"
                },
                {
                    "date": 1702751564112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,26 @@\n+<!DOCTYPE html>\r\n+<html lang=\"en\">\r\n+    <head>\r\n+        <meta charset=\"UTF-8\" />\r\n+        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n+        <title>Document</title>\r\n+    </head>\r\n+    <style>\r\n+        body {\r\n+            height: 100vh;\r\n+            background-color: black;\r\n+            display: grid;\r\n+            place-content: center;\r\n+            overflow: hidden;\r\n+        }\r\n+    </style>\r\n+    <body>\r\n+        <div class=\"container\">\r\n+            <div class=\"box1\"></div>\r\n+            <div class=\"box2\"></div>\r\n+        </div>\r\n+        <script>\r\n+            \r\n+        </script>\r\n+    </body>\r\n+</html>\r\n"
                },
                {
                    "date": 1702751576272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,27 @@\n+<!DOCTYPE html>\r\n+<html lang=\"en\">\r\n+    <head>\r\n+        <meta charset=\"UTF-8\" />\r\n+        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n+        <title>Document</title>\r\n+    </head>\r\n+    <style>\r\n+        body {\r\n+            height: 100vh;\r\n+            background-color: black;\r\n+            display: grid;\r\n+            place-content: center;\r\n+            overflow: hidden;\r\n+        }\r\n+        .container{\r\n+            heid\r\n+        }\r\n+    </style>\r\n+    <body>\r\n+        <div class=\"container\">\r\n+            <div class=\"box1\"></div>\r\n+            <div class=\"box2\"></div>\r\n+        </div>\r\n+        <script></script>\r\n+    </body>\r\n+</html>\r\n"
                },
                {
                    "date": 1702751585001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,28 @@\n+<!DOCTYPE html>\r\n+<html lang=\"en\">\r\n+    <head>\r\n+        <meta charset=\"UTF-8\" />\r\n+        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n+        <title>Document</title>\r\n+    </head>\r\n+    <style>\r\n+        body {\r\n+            height: 100vh;\r\n+            background-color: black;\r\n+            display: grid;\r\n+            place-content: center;\r\n+            overflow: hidden;\r\n+        }\r\n+        .container{\r\n+            height: 300px;\r\n+            width: 200px;\r\n+        }\r\n+    </style>\r\n+    <body>\r\n+        <div class=\"container\">\r\n+            <div class=\"box1\"></div>\r\n+            <div class=\"box2\"></div>\r\n+        </div>\r\n+        <script></script>\r\n+    </body>\r\n+</html>\r\n"
                },
                {
                    "date": 1702751610038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n         }\r\n         .container{\r\n             height: 300px;\r\n             width: 200px;\r\n+            background-color: gray;\r\n         }\r\n     </style>\r\n     <body>\r\n         <div class=\"container\">\r\n@@ -25,171 +26,4 @@\n         </div>\r\n         <script></script>\r\n     </body>\r\n </html>\r\n-<!DOCTYPE html>\r\n-<html lang=\"en\">\r\n-    <head>\r\n-        <meta charset=\"UTF-8\" />\r\n-        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n-        <title>Document</title>\r\n-    </head>\r\n-    <style>\r\n-        body {\r\n-            height: 100vh;\r\n-            background-color: black;\r\n-            display: grid;\r\n-            place-content: center;\r\n-            overflow: hidden;\r\n-        }\r\n-        .container{\r\n-            heid\r\n-        }\r\n-    </style>\r\n-    <body>\r\n-        <div class=\"container\">\r\n-            <div class=\"box1\"></div>\r\n-            <div class=\"box2\"></div>\r\n-        </div>\r\n-        <script></script>\r\n-    </body>\r\n-</html>\r\n-<!DOCTYPE html>\r\n-<html lang=\"en\">\r\n-    <head>\r\n-        <meta charset=\"UTF-8\" />\r\n-        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n-        <title>Document</title>\r\n-    </head>\r\n-    <style>\r\n-        body {\r\n-            height: 100vh;\r\n-            background-color: black;\r\n-            display: grid;\r\n-            place-content: center;\r\n-            overflow: hidden;\r\n-        }\r\n-    </style>\r\n-    <body>\r\n-        <div class=\"container\">\r\n-            <div class=\"box1\"></div>\r\n-            <div class=\"box2\"></div>\r\n-        </div>\r\n-        <script>\r\n-            \r\n-        </script>\r\n-    </body>\r\n-</html>\r\n-<!DOCTYPE html>\r\n-<html lang=\"en\">\r\n-    <head>\r\n-        <meta charset=\"UTF-8\" />\r\n-        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n-        <title>Document</title>\r\n-    </head>\r\n-    <style>\r\n-        body {\r\n-            height: 100vh;\r\n-            background-color: black;\r\n-            display: grid;\r\n-            place-content: center;\r\n-            overflow: hidden;\r\n-        }\r\n-    </style>\r\n-    <body>\r\n-        <div class=\"container\">\r\n-            <div class=\"swipeable\"></div>\r\n-        </div>\r\n-        <script>\r\n-            \r\n-            });\r\n-        </script>\r\n-    </body>\r\n-</html>\r\n-<!DOCTYPE html>\r\n-<html lang=\"en\">\r\n-    <head>\r\n-        <meta charset=\"UTF-8\" />\r\n-        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n-        <title>Document</title>\r\n-    </head>\r\n-    <style>\r\n-        body {\r\n-            height: 100vh;\r\n-            background-color: black;\r\n-            display: grid;\r\n-            place-content: center;\r\n-            overflow: hidden;\r\n-        }\r\n-        .container {\r\n-            height: 100px;\r\n-            width: 300px;\r\n-            background-color: white;\r\n-            overflow: hidden;\r\n-        }\r\n-        .swipeable {\r\n-            height: 100%;\r\n-            width: 100%;\r\n-            background-color: red;\r\n-            transition: transform 0.3s ease;\r\n-        }\r\n-    </style>\r\n-    <body>\r\n-        <div class=\"container\">\r\n-            <div class=\"swipeable\"></div>\r\n-        </div>\r\n-        <script>\r\n-            document.addEventListener(\"DOMContentLoaded\", function () {\r\n-                var swipeable = document.querySelector(\".swipeable\");\r\n-                var startX, currentX;\r\n-                var isDragging = false; // To track if mouse drag is active\r\n-                const maxSwipeDistance = 100;\r\n-\r\n-                // Function to handle the start of a swipe/drag\r\n-                function startHandler(e) {\r\n-                    startX = e.touches ? e.touches[0].clientX : e.clientX;\r\n-                    isDragging = true;\r\n-                }\r\n-\r\n-                // Function to handle the move of a swipe/drag\r\n-                function moveHandler(e) {\r\n-                    if (!isDragging) return;\r\n-                    currentX = e.touches ? e.touches[0].clientX : e.clientX;\r\n-                    var deltaX = currentX - startX;\r\n-                    if (deltaX > maxSwipeDistance) deltaX = maxSwipeDistance;\r\n-                    else if (deltaX < -maxSwipeDistance)\r\n-                        deltaX = -maxSwipeDistance;\r\n-                    swipeable.style.transform = `translateX(${deltaX}px)`;\r\n-                }\r\n-\r\n-                // Function to handle the end of a swipe/drag\r\n-                function endHandler(e) {\r\n-                    if (!isDragging) return;\r\n-                    isDragging = false;\r\n-\r\n-                    // Keep the element at its swiped position or reset\r\n-                    if (Math.abs(currentX - startX) >= maxSwipeDistance) {\r\n-                        // Keep the element at its maximum swiped position\r\n-                        let finalTransform =\r\n-                            currentX - startX > 0\r\n-                                ? `translateX(${maxSwipeDistance}px)`\r\n-                                : `translateX(${-maxSwipeDistance}px)`;\r\n-                        swipeable.style.transform = finalTransform;\r\n-                    } else {\r\n-                        // Reset position if swipe was not long enough\r\n-                        swipeable.style.transform = \"\";\r\n-                    }\r\n-                }\r\n-\r\n-                // Touch events\r\n-                swipeable.addEventListener(\"touchstart\", startHandler);\r\n-                swipeable.addEventListener(\"touchmove\", moveHandler);\r\n-                swipeable.addEventListener(\"touchend\", endHandler);\r\n-\r\n-                // Mouse events\r\n-                swipeable.addEventListener(\"mousedown\", startHandler);\r\n-                document.addEventListener(\"mousemove\", moveHandler);\r\n-                document.addEventListener(\"mouseup\", endHandler);\r\n-            });\r\n-        </script>\r\n-    </body>\r\n-</html>\r\n"
                },
                {
                    "date": 1702751620985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,13 @@\n             height: 300px;\r\n             width: 200px;\r\n             background-color: gray;\r\n         }\r\n+        .container{\r\n+            height: 300px;\r\n+            width: 200px;\r\n+            background-color: gray;\r\n+        }\r\n     </style>\r\n     <body>\r\n         <div class=\"container\">\r\n             <div class=\"box1\"></div>\r\n"
                },
                {
                    "date": 1702751632146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,10 @@\n             height: 300px;\r\n             width: 200px;\r\n             background-color: gray;\r\n         }\r\n-        .container{\r\n-            height: 300px;\r\n+        .box1{\r\n+            height: 150px;\r\n             width: 200px;\r\n             background-color: gray;\r\n         }\r\n     </style>\r\n"
                },
                {
                    "date": 1702751639122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,15 @@\n         }\r\n         .box1{\r\n             height: 150px;\r\n             width: 200px;\r\n-            background-color: gray;\r\n+            background-color: red;\r\n         }\r\n+        .box1{\r\n+            height: 150px;\r\n+            width: 200px;\r\n+            background-color: red;\r\n+        }\r\n     </style>\r\n     <body>\r\n         <div class=\"container\">\r\n             <div class=\"box1\"></div>\r\n"
                },
                {
                    "date": 1702751651679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,12 +22,12 @@\n             height: 150px;\r\n             width: 200px;\r\n             background-color: red;\r\n         }\r\n-        .box1{\r\n+        .box2{\r\n             height: 150px;\r\n             width: 200px;\r\n-            background-color: red;\r\n+            background-color: green;\r\n         }\r\n     </style>\r\n     <body>\r\n         <div class=\"container\">\r\n"
                },
                {
                    "date": 1702751658764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,13 +21,15 @@\n         .box1{\r\n             height: 150px;\r\n             width: 200px;\r\n             background-color: red;\r\n+            \r\n         }\r\n         .box2{\r\n             height: 150px;\r\n             width: 200px;\r\n             background-color: green;\r\n+            \r\n         }\r\n     </style>\r\n     <body>\r\n         <div class=\"container\">\r\n"
                },
                {
                    "date": 1702751668290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,15 +21,17 @@\n         .box1{\r\n             height: 150px;\r\n             width: 200px;\r\n             background-color: red;\r\n-            \r\n+            cursor: pointer;\r\n+            bor\r\n         }\r\n         .box2{\r\n             height: 150px;\r\n             width: 200px;\r\n             background-color: green;\r\n-            \r\n+            cursor: pointer;\r\n+            bor\r\n         }\r\n     </style>\r\n     <body>\r\n         <div class=\"container\">\r\n"
                },
                {
                    "date": 1702751673520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,16 +22,16 @@\n             height: 150px;\r\n             width: 200px;\r\n             background-color: red;\r\n             cursor: pointer;\r\n-            bor\r\n+            border\r\n         }\r\n         .box2{\r\n             height: 150px;\r\n             width: 200px;\r\n             background-color: green;\r\n             cursor: pointer;\r\n-            bor\r\n+            border\r\n         }\r\n     </style>\r\n     <body>\r\n         <div class=\"container\">\r\n"
                },
                {
                    "date": 1702751678771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,16 +22,16 @@\n             height: 150px;\r\n             width: 200px;\r\n             background-color: red;\r\n             cursor: pointer;\r\n-            border\r\n+            \r\n         }\r\n         .box2{\r\n             height: 150px;\r\n             width: 200px;\r\n             background-color: green;\r\n             cursor: pointer;\r\n-            border\r\n+            \r\n         }\r\n     </style>\r\n     <body>\r\n         <div class=\"container\">\r\n"
                },
                {
                    "date": 1702751688887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,26 +12,26 @@\n             display: grid;\r\n             place-content: center;\r\n             overflow: hidden;\r\n         }\r\n-        .container{\r\n+        .container {\r\n             height: 300px;\r\n             width: 200px;\r\n             background-color: gray;\r\n         }\r\n-        .box1{\r\n+        .box1 {\r\n             height: 150px;\r\n             width: 200px;\r\n             background-color: red;\r\n             cursor: pointer;\r\n-            \r\n+            border: 1px solid;\r\n         }\r\n-        .box2{\r\n+        .box2 {\r\n             height: 150px;\r\n             width: 200px;\r\n             background-color: green;\r\n             cursor: pointer;\r\n-            \r\n+            border: 1px solid;\r\n         }\r\n     </style>\r\n     <body>\r\n         <div class=\"container\">\r\n"
                },
                {
                    "date": 1702751826859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,7 +37,81 @@\n         <div class=\"container\">\r\n             <div class=\"box1\"></div>\r\n             <div class=\"box2\"></div>\r\n         </div>\r\n-        <script></script>\r\n+        <script>\r\n+            document.addEventListener('DOMContentLoaded', function() {\r\n+                const boxes = document.querySelectorAll('.container > div');\r\n+                let dragSrcEl = null;\r\n+                let holdTimer = null;\r\n+            \r\n+                function handleDragStart(e) {\r\n+                    this.style.opacity = '0.4';\r\n+                    dragSrcEl = this;\r\n+            \r\n+                    e.dataTransfer.effectAllowed = 'move';\r\n+                    e.dataTransfer.setData('text/html', this.innerHTML);\r\n+                }\r\n+            \r\n+                function handleDragOver(e) {\r\n+                    if (e.preventDefault) {\r\n+                        e.preventDefault();\r\n+                    }\r\n+            \r\n+                    e.dataTransfer.dropEffect = 'move';\r\n+                    return false;\r\n+                }\r\n+            \r\n+                function handleDragEnter(e) {\r\n+                    this.classList.add('over');\r\n+                }\r\n+            \r\n+                function handleDragLeave(e) {\r\n+                    this.classList.remove('over');\r\n+                }\r\n+            \r\n+                function handleDrop(e) {\r\n+                    if (e.stopPropagation) {\r\n+                        e.stopPropagation();\r\n+                    }\r\n+            \r\n+                    if (dragSrcEl !== this) {\r\n+                        dragSrcEl.innerHTML = this.innerHTML;\r\n+                        this.innerHTML = e.dataTransfer.getData('text/html');\r\n+                    }\r\n+            \r\n+                    return false;\r\n+                }\r\n+            \r\n+                function handleDragEnd(e) {\r\n+                    this.style.opacity = '1';\r\n+                    boxes.forEach(function (box) {\r\n+                        box.classList.remove('over');\r\n+                    });\r\n+                }\r\n+            \r\n+                boxes.forEach(function(box) {\r\n+                    box.addEventListener('mousedown', function(e) {\r\n+                        holdTimer = setTimeout(() => {\r\n+                            box.setAttribute('draggable', true);\r\n+                            box.classList.add('draggable');\r\n+                        }, 2000);\r\n+                    });\r\n+            \r\n+                    box.addEventListener('mouseup', function() {\r\n+                        clearTimeout(holdTimer);\r\n+                        box.setAttribute('draggable', false);\r\n+                        box.classList.remove('draggable');\r\n+                    });\r\n+            \r\n+                    box.addEventListener('dragstart', handleDragStart);\r\n+                    box.addEventListener('dragenter', handleDragEnter);\r\n+                    box.addEventListener('dragover', handleDragOver);\r\n+                    box.addEventListener('dragleave', handleDragLeave);\r\n+                    box.addEventListener('drop', handleDrop);\r\n+                    box.addEventListener('dragend', handleDragEnd);\r\n+                });\r\n+            });\r\n+            \r\n+        </script>\r\n     </body>\r\n </html>\r\n"
                },
                {
                    "date": 1702751975438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,80 +38,69 @@\n             <div class=\"box1\"></div>\r\n             <div class=\"box2\"></div>\r\n         </div>\r\n         <script>\r\n-            document.addEventListener('DOMContentLoaded', function() {\r\n-                const boxes = document.querySelectorAll('.container > div');\r\n+            document.addEventListener(\"DOMContentLoaded\", function () {\r\n+                const boxes = document.querySelectorAll(\".container > div\");\r\n                 let dragSrcEl = null;\r\n                 let holdTimer = null;\r\n-            \r\n+\r\n                 function handleDragStart(e) {\r\n-                    this.style.opacity = '0.4';\r\n                     dragSrcEl = this;\r\n-            \r\n-                    e.dataTransfer.effectAllowed = 'move';\r\n-                    e.dataTransfer.setData('text/html', this.innerHTML);\r\n+                    e.dataTransfer.effectAllowed = \"move\";\r\n+                    e.dataTransfer.setData(\"text/html\", this.outerHTML);\r\n+                    this.classList.add(\"dragging\");\r\n                 }\r\n-            \r\n+\r\n                 function handleDragOver(e) {\r\n-                    if (e.preventDefault) {\r\n-                        e.preventDefault();\r\n-                    }\r\n-            \r\n-                    e.dataTransfer.dropEffect = 'move';\r\n-                    return false;\r\n+                    e.preventDefault(); // Necessary to allow dropping.\r\n+                    e.dataTransfer.dropEffect = \"move\";\r\n                 }\r\n-            \r\n-                function handleDragEnter(e) {\r\n-                    this.classList.add('over');\r\n-                }\r\n-            \r\n-                function handleDragLeave(e) {\r\n-                    this.classList.remove('over');\r\n-                }\r\n-            \r\n+\r\n                 function handleDrop(e) {\r\n-                    if (e.stopPropagation) {\r\n-                        e.stopPropagation();\r\n+                    e.stopPropagation(); // Stops some browsers from redirecting.\r\n+                    e.preventDefault();\r\n+\r\n+                    const target = e.target.closest(\".container > div\");\r\n+\r\n+                    // Swap the elements if the source and the target are different\r\n+                    if (dragSrcEl !== target) {\r\n+                        const sourceParent = dragSrcEl.parentNode;\r\n+                        const targetParent = target.parentNode;\r\n+\r\n+                        targetParent.insertBefore(dragSrcEl, target);\r\n+                        sourceParent.insertBefore(target, dragSrcEl);\r\n                     }\r\n-            \r\n-                    if (dragSrcEl !== this) {\r\n-                        dragSrcEl.innerHTML = this.innerHTML;\r\n-                        this.innerHTML = e.dataTransfer.getData('text/html');\r\n-                    }\r\n-            \r\n+\r\n                     return false;\r\n                 }\r\n-            \r\n+\r\n                 function handleDragEnd(e) {\r\n-                    this.style.opacity = '1';\r\n+                    e.preventDefault();\r\n                     boxes.forEach(function (box) {\r\n-                        box.classList.remove('over');\r\n+                        box.classList.remove(\"dragging\");\r\n                     });\r\n                 }\r\n-            \r\n-                boxes.forEach(function(box) {\r\n-                    box.addEventListener('mousedown', function(e) {\r\n+\r\n+                boxes.forEach(function (box) {\r\n+                    box.addEventListener(\"mousedown\", function (e) {\r\n                         holdTimer = setTimeout(() => {\r\n-                            box.setAttribute('draggable', true);\r\n-                            box.classList.add('draggable');\r\n+                            box.setAttribute(\"draggable\", true);\r\n+                            box.classList.add(\"draggable\");\r\n                         }, 2000);\r\n                     });\r\n-            \r\n-                    box.addEventListener('mouseup', function() {\r\n+\r\n+                    box.addEventListener(\"mouseup\", function () {\r\n                         clearTimeout(holdTimer);\r\n-                        box.setAttribute('draggable', false);\r\n-                        box.classList.remove('draggable');\r\n+                        box.setAttribute(\"draggable\", false);\r\n+                        box.classList.remove(\"draggable\");\r\n                     });\r\n-            \r\n-                    box.addEventListener('dragstart', handleDragStart);\r\n-                    box.addEventListener('dragenter', handleDragEnter);\r\n-                    box.addEventListener('dragover', handleDragOver);\r\n-                    box.addEventListener('dragleave', handleDragLeave);\r\n-                    box.addEventListener('drop', handleDrop);\r\n-                    box.addEventListener('dragend', handleDragEnd);\r\n+\r\n+                    box.addEventListener(\"dragstart\", handleDragStart);\r\n+                    box.addEventListener(\"dragover\", handleDragOver);\r\n+                    box.addEventListener(\"drop\", handleDrop);\r\n+                    box.addEventListener(\"dragend\", handleDragEnd);\r\n                 });\r\n             });\r\n-            \r\n         </script>\r\n     </body>\r\n </html>\r\n"
                },
                {
                    "date": 1702752093096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,69 +38,77 @@\n             <div class=\"box1\"></div>\r\n             <div class=\"box2\"></div>\r\n         </div>\r\n         <script>\r\n-            document.addEventListener(\"DOMContentLoaded\", function () {\r\n-                const boxes = document.querySelectorAll(\".container > div\");\r\n+            document.addEventListener('DOMContentLoaded', function() {\r\n+                const boxes = document.querySelectorAll('.container > div');\r\n                 let dragSrcEl = null;\r\n                 let holdTimer = null;\r\n-\r\n+            \r\n                 function handleDragStart(e) {\r\n                     dragSrcEl = this;\r\n-                    e.dataTransfer.effectAllowed = \"move\";\r\n-                    e.dataTransfer.setData(\"text/html\", this.outerHTML);\r\n-                    this.classList.add(\"dragging\");\r\n+                    e.dataTransfer.effectAllowed = 'move';\r\n+                    e.dataTransfer.setData('text/html', this.outerHTML);\r\n+                    this.classList.add('dragging');\r\n                 }\r\n-\r\n+            \r\n                 function handleDragOver(e) {\r\n                     e.preventDefault(); // Necessary to allow dropping.\r\n-                    e.dataTransfer.dropEffect = \"move\";\r\n+                    e.dataTransfer.dropEffect = 'move';\r\n                 }\r\n-\r\n+            \r\n                 function handleDrop(e) {\r\n                     e.stopPropagation(); // Stops some browsers from redirecting.\r\n                     e.preventDefault();\r\n-\r\n-                    const target = e.target.closest(\".container > div\");\r\n-\r\n-                    // Swap the elements if the source and the target are different\r\n+            \r\n+                    const target = e.target.closest('.container > div');\r\n+            \r\n                     if (dragSrcEl !== target) {\r\n-                        const sourceParent = dragSrcEl.parentNode;\r\n-                        const targetParent = target.parentNode;\r\n-\r\n-                        targetParent.insertBefore(dragSrcEl, target);\r\n-                        sourceParent.insertBefore(target, dragSrcEl);\r\n+                        // Swap the HTML of the dragged element and the target element\r\n+                        let dragSrcElHTML = dragSrcEl.outerHTML;\r\n+                        let targetHTML = target.outerHTML;\r\n+            \r\n+                        dragSrcEl.outerHTML = targetHTML;\r\n+                        target.outerHTML = dragSrcElHTML;\r\n+            \r\n+                        // Update the reference to the newly swapped elements\r\n+                        dragSrcEl = document.querySelector('.dragging');\r\n+                        boxes.forEach(box => box.removeEventListener('drop', handleDrop));\r\n+            \r\n+                        // Re-attach event listeners to the swapped elements\r\n+                        document.querySelectorAll('.container > div').forEach(box => {\r\n+                            box.addEventListener('drop', handleDrop);\r\n+                        });\r\n                     }\r\n-\r\n-                    return false;\r\n                 }\r\n-\r\n+            \r\n                 function handleDragEnd(e) {\r\n                     e.preventDefault();\r\n-                    boxes.forEach(function (box) {\r\n-                        box.classList.remove(\"dragging\");\r\n+                    boxes.forEach(function(box) {\r\n+                        box.classList.remove('dragging');\r\n                     });\r\n                 }\r\n-\r\n-                boxes.forEach(function (box) {\r\n-                    box.addEventListener(\"mousedown\", function (e) {\r\n+            \r\n+                boxes.forEach(function(box) {\r\n+                    box.addEventListener('mousedown', function(e) {\r\n                         holdTimer = setTimeout(() => {\r\n-                            box.setAttribute(\"draggable\", true);\r\n-                            box.classList.add(\"draggable\");\r\n+                            box.setAttribute('draggable', true);\r\n+                            box.classList.add('draggable');\r\n                         }, 2000);\r\n                     });\r\n-\r\n-                    box.addEventListener(\"mouseup\", function () {\r\n+            \r\n+                    box.addEventListener('mouseup', function() {\r\n                         clearTimeout(holdTimer);\r\n-                        box.setAttribute(\"draggable\", false);\r\n-                        box.classList.remove(\"draggable\");\r\n+                        box.setAttribute('draggable', false);\r\n+                        box.classList.remove('draggable');\r\n                     });\r\n-\r\n-                    box.addEventListener(\"dragstart\", handleDragStart);\r\n-                    box.addEventListener(\"dragover\", handleDragOver);\r\n-                    box.addEventListener(\"drop\", handleDrop);\r\n-                    box.addEventListener(\"dragend\", handleDragEnd);\r\n+            \r\n+                    box.addEventListener('dragstart', handleDragStart);\r\n+                    box.addEventListener('dragover', handleDragOver);\r\n+                    box.addEventListener('drop', handleDrop);\r\n+                    box.addEventListener('dragend', handleDragEnd);\r\n                 });\r\n             });\r\n+            \r\n         </script>\r\n     </body>\r\n </html>\r\n"
                },
                {
                    "date": 1702752154783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,77 +38,69 @@\n             <div class=\"box1\"></div>\r\n             <div class=\"box2\"></div>\r\n         </div>\r\n         <script>\r\n-            document.addEventListener('DOMContentLoaded', function() {\r\n-                const boxes = document.querySelectorAll('.container > div');\r\n+            document.addEventListener(\"DOMContentLoaded\", function () {\r\n+                const boxes = document.querySelectorAll(\".container > div\");\r\n                 let dragSrcEl = null;\r\n                 let holdTimer = null;\r\n-            \r\n+\r\n                 function handleDragStart(e) {\r\n                     dragSrcEl = this;\r\n-                    e.dataTransfer.effectAllowed = 'move';\r\n-                    e.dataTransfer.setData('text/html', this.outerHTML);\r\n-                    this.classList.add('dragging');\r\n+                    e.dataTransfer.effectAllowed = \"move\";\r\n+                    e.dataTransfer.setData(\"text/html\", this.outerHTML);\r\n+                    this.classList.add(\"dragging\");\r\n                 }\r\n-            \r\n+\r\n                 function handleDragOver(e) {\r\n                     e.preventDefault(); // Necessary to allow dropping.\r\n-                    e.dataTransfer.dropEffect = 'move';\r\n+                    e.dataTransfer.dropEffect = \"move\";\r\n                 }\r\n-            \r\n+\r\n                 function handleDrop(e) {\r\n                     e.stopPropagation(); // Stops some browsers from redirecting.\r\n                     e.preventDefault();\r\n-            \r\n-                    const target = e.target.closest('.container > div');\r\n-            \r\n+\r\n+                    const target = e.target.closest(\".container > div\");\r\n+\r\n+                    // Swap the elements if the source and the target are different\r\n                     if (dragSrcEl !== target) {\r\n-                        // Swap the HTML of the dragged element and the target element\r\n-                        let dragSrcElHTML = dragSrcEl.outerHTML;\r\n-                        let targetHTML = target.outerHTML;\r\n-            \r\n-                        dragSrcEl.outerHTML = targetHTML;\r\n-                        target.outerHTML = dragSrcElHTML;\r\n-            \r\n-                        // Update the reference to the newly swapped elements\r\n-                        dragSrcEl = document.querySelector('.dragging');\r\n-                        boxes.forEach(box => box.removeEventListener('drop', handleDrop));\r\n-            \r\n-                        // Re-attach event listeners to the swapped elements\r\n-                        document.querySelectorAll('.container > div').forEach(box => {\r\n-                            box.addEventListener('drop', handleDrop);\r\n-                        });\r\n+                        const sourceParent = dragSrcEl.parentNode;\r\n+                        const targetParent = target.parentNode;\r\n+\r\n+                        targetParent.insertBefore(dragSrcEl, target);\r\n+                        sourceParent.insertBefore(target, dragSrcEl);\r\n                     }\r\n+\r\n+                    return false;\r\n                 }\r\n-            \r\n+\r\n                 function handleDragEnd(e) {\r\n                     e.preventDefault();\r\n-                    boxes.forEach(function(box) {\r\n-                        box.classList.remove('dragging');\r\n+                    boxes.forEach(function (box) {\r\n+                        box.classList.remove(\"dragging\");\r\n                     });\r\n                 }\r\n-            \r\n-                boxes.forEach(function(box) {\r\n-                    box.addEventListener('mousedown', function(e) {\r\n+\r\n+                boxes.forEach(function (box) {\r\n+                    box.addEventListener(\"mousedown\", function (e) {\r\n                         holdTimer = setTimeout(() => {\r\n-                            box.setAttribute('draggable', true);\r\n-                            box.classList.add('draggable');\r\n+                            box.setAttribute(\"draggable\", true);\r\n+                            box.classList.add(\"draggable\");\r\n                         }, 2000);\r\n                     });\r\n-            \r\n-                    box.addEventListener('mouseup', function() {\r\n+\r\n+                    box.addEventListener(\"mouseup\", function () {\r\n                         clearTimeout(holdTimer);\r\n-                        box.setAttribute('draggable', false);\r\n-                        box.classList.remove('draggable');\r\n+                        box.setAttribute(\"draggable\", false);\r\n+                        box.classList.remove(\"draggable\");\r\n                     });\r\n-            \r\n-                    box.addEventListener('dragstart', handleDragStart);\r\n-                    box.addEventListener('dragover', handleDragOver);\r\n-                    box.addEventListener('drop', handleDrop);\r\n-                    box.addEventListener('dragend', handleDragEnd);\r\n+\r\n+                    box.addEventListener(\"dragstart\", handleDragStart);\r\n+                    box.addEventListener(\"dragover\", handleDragOver);\r\n+                    box.addEventListener(\"drop\", handleDrop);\r\n+                    box.addEventListener(\"dragend\", handleDragEnd);\r\n                 });\r\n             });\r\n-            \r\n         </script>\r\n     </body>\r\n </html>\r\n"
                },
                {
                    "date": 1702752351284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,69 +38,55 @@\n             <div class=\"box1\"></div>\r\n             <div class=\"box2\"></div>\r\n         </div>\r\n         <script>\r\n-            document.addEventListener(\"DOMContentLoaded\", function () {\r\n-                const boxes = document.querySelectorAll(\".container > div\");\r\n+            document.addEventListener('DOMContentLoaded', function() {\r\n+                const container = document.querySelector('.container');\r\n                 let dragSrcEl = null;\r\n-                let holdTimer = null;\r\n-\r\n+            \r\n                 function handleDragStart(e) {\r\n                     dragSrcEl = this;\r\n-                    e.dataTransfer.effectAllowed = \"move\";\r\n-                    e.dataTransfer.setData(\"text/html\", this.outerHTML);\r\n-                    this.classList.add(\"dragging\");\r\n+                    e.dataTransfer.effectAllowed = 'move';\r\n+                    e.dataTransfer.setData('text/plain', ''); // Data is required for some browsers\r\n+                    this.classList.add('dragging');\r\n+                    this.setAttribute('draggable', true); // Ensure the element is draggable\r\n                 }\r\n-\r\n+            \r\n                 function handleDragOver(e) {\r\n                     e.preventDefault(); // Necessary to allow dropping.\r\n-                    e.dataTransfer.dropEffect = \"move\";\r\n+                    e.dataTransfer.dropEffect = 'move';\r\n                 }\r\n-\r\n+            \r\n                 function handleDrop(e) {\r\n-                    e.stopPropagation(); // Stops some browsers from redirecting.\r\n                     e.preventDefault();\r\n-\r\n-                    const target = e.target.closest(\".container > div\");\r\n-\r\n-                    // Swap the elements if the source and the target are different\r\n-                    if (dragSrcEl !== target) {\r\n-                        const sourceParent = dragSrcEl.parentNode;\r\n-                        const targetParent = target.parentNode;\r\n-\r\n-                        targetParent.insertBefore(dragSrcEl, target);\r\n-                        sourceParent.insertBefore(target, dragSrcEl);\r\n+                    if (dragSrcEl !== this) {\r\n+                        let draggedIndex = Array.from(container.children).indexOf(dragSrcEl);\r\n+                        let targetIndex = Array.from(container.children).indexOf(this);\r\n+            \r\n+                        if (draggedIndex < targetIndex) {\r\n+                            container.insertBefore(dragSrcEl, this.nextSibling);\r\n+                        } else {\r\n+                            container.insertBefore(dragSrcEl, this);\r\n+                        }\r\n                     }\r\n-\r\n-                    return false;\r\n                 }\r\n-\r\n+            \r\n                 function handleDragEnd(e) {\r\n                     e.preventDefault();\r\n-                    boxes.forEach(function (box) {\r\n-                        box.classList.remove(\"dragging\");\r\n+                    Array.from(container.children).forEach(function(box) {\r\n+                        box.classList.remove('dragging');\r\n+                        box.setAttribute('draggable', false); // Reset draggable attribute\r\n                     });\r\n                 }\r\n-\r\n-                boxes.forEach(function (box) {\r\n-                    box.addEventListener(\"mousedown\", function (e) {\r\n-                        holdTimer = setTimeout(() => {\r\n-                            box.setAttribute(\"draggable\", true);\r\n-                            box.classList.add(\"draggable\");\r\n-                        }, 2000);\r\n-                    });\r\n-\r\n-                    box.addEventListener(\"mouseup\", function () {\r\n-                        clearTimeout(holdTimer);\r\n-                        box.setAttribute(\"draggable\", false);\r\n-                        box.classList.remove(\"draggable\");\r\n-                    });\r\n-\r\n-                    box.addEventListener(\"dragstart\", handleDragStart);\r\n-                    box.addEventListener(\"dragover\", handleDragOver);\r\n-                    box.addEventListener(\"drop\", handleDrop);\r\n-                    box.addEventListener(\"dragend\", handleDragEnd);\r\n+            \r\n+                Array.from(container.children).forEach(function(box) {\r\n+                    box.addEventListener('dragstart', handleDragStart);\r\n+                    box.addEventListener('dragover', handleDragOver);\r\n+                    box.addEventListener('drop', handleDrop);\r\n+                    box.addEventListener('dragend', handleDragEnd);\r\n                 });\r\n             });\r\n+            \r\n+            \r\n         </script>\r\n     </body>\r\n </html>\r\n"
                },
                {
                    "date": 1702752377399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,15 +41,15 @@\n         <script>\r\n             document.addEventListener('DOMContentLoaded', function() {\r\n                 const container = document.querySelector('.container');\r\n                 let dragSrcEl = null;\r\n+                let holdTimer = null;\r\n             \r\n                 function handleDragStart(e) {\r\n                     dragSrcEl = this;\r\n                     e.dataTransfer.effectAllowed = 'move';\r\n                     e.dataTransfer.setData('text/plain', ''); // Data is required for some browsers\r\n                     this.classList.add('dragging');\r\n-                    this.setAttribute('draggable', true); // Ensure the element is draggable\r\n                 }\r\n             \r\n                 function handleDragOver(e) {\r\n                     e.preventDefault(); // Necessary to allow dropping.\r\n@@ -73,20 +73,31 @@\n                 function handleDragEnd(e) {\r\n                     e.preventDefault();\r\n                     Array.from(container.children).forEach(function(box) {\r\n                         box.classList.remove('dragging');\r\n-                        box.setAttribute('draggable', false); // Reset draggable attribute\r\n                     });\r\n                 }\r\n             \r\n                 Array.from(container.children).forEach(function(box) {\r\n+                    box.addEventListener('mousedown', function(e) {\r\n+                        holdTimer = setTimeout(() => {\r\n+                            box.setAttribute('draggable', true);\r\n+                            box.classList.add('draggable');\r\n+                        }, 2000);\r\n+                    });\r\n+            \r\n+                    box.addEventListener('mouseup', function() {\r\n+                        clearTimeout(holdTimer);\r\n+                        box.setAttribute('draggable', false);\r\n+                        box.classList.remove('draggable');\r\n+                    });\r\n+            \r\n                     box.addEventListener('dragstart', handleDragStart);\r\n                     box.addEventListener('dragover', handleDragOver);\r\n                     box.addEventListener('drop', handleDrop);\r\n                     box.addEventListener('dragend', handleDragEnd);\r\n                 });\r\n             });\r\n             \r\n-            \r\n         </script>\r\n     </body>\r\n </html>\r\n"
                },
                {
                    "date": 1702752497193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,63 +41,64 @@\n         <script>\r\n             document.addEventListener('DOMContentLoaded', function() {\r\n                 const container = document.querySelector('.container');\r\n                 let dragSrcEl = null;\r\n-                let holdTimer = null;\r\n+                let isDragging = false;\r\n             \r\n                 function handleDragStart(e) {\r\n                     dragSrcEl = this;\r\n-                    e.dataTransfer.effectAllowed = 'move';\r\n-                    e.dataTransfer.setData('text/plain', ''); // Data is required for some browsers\r\n+                    isDragging = true;\r\n                     this.classList.add('dragging');\r\n                 }\r\n             \r\n                 function handleDragOver(e) {\r\n-                    e.preventDefault(); // Necessary to allow dropping.\r\n-                    e.dataTransfer.dropEffect = 'move';\r\n+                    if (isDragging) {\r\n+                        e.preventDefault(); // Necessary for allowing drop\r\n+                    }\r\n                 }\r\n             \r\n-                function handleDrop(e) {\r\n-                    e.preventDefault();\r\n-                    if (dragSrcEl !== this) {\r\n+                function handleDrop(e, target) {\r\n+                    if (dragSrcEl !== target) {\r\n                         let draggedIndex = Array.from(container.children).indexOf(dragSrcEl);\r\n-                        let targetIndex = Array.from(container.children).indexOf(this);\r\n+                        let targetIndex = Array.from(container.children).indexOf(target);\r\n             \r\n                         if (draggedIndex < targetIndex) {\r\n-                            container.insertBefore(dragSrcEl, this.nextSibling);\r\n+                            container.insertBefore(dragSrcEl, target.nextSibling);\r\n                         } else {\r\n-                            container.insertBefore(dragSrcEl, this);\r\n+                            container.insertBefore(dragSrcEl, target);\r\n                         }\r\n                     }\r\n                 }\r\n             \r\n-                function handleDragEnd(e) {\r\n-                    e.preventDefault();\r\n+                function handleDragEnd() {\r\n+                    isDragging = false;\r\n                     Array.from(container.children).forEach(function(box) {\r\n                         box.classList.remove('dragging');\r\n                     });\r\n                 }\r\n             \r\n-                Array.from(container.children).forEach(function(box) {\r\n-                    box.addEventListener('mousedown', function(e) {\r\n-                        holdTimer = setTimeout(() => {\r\n-                            box.setAttribute('draggable', true);\r\n-                            box.classList.add('draggable');\r\n-                        }, 2000);\r\n-                    });\r\n+                function handleTouchMove(e) {\r\n+                    var touchLocation = e.targetTouches[0];\r\n+                    var targetElement = document.elementFromPoint(touchLocation.clientX, touchLocation.clientY);\r\n             \r\n-                    box.addEventListener('mouseup', function() {\r\n-                        clearTimeout(holdTimer);\r\n-                        box.setAttribute('draggable', false);\r\n-                        box.classList.remove('draggable');\r\n-                    });\r\n+                    if (targetElement && targetElement !== dragSrcEl && targetElement.parentNode === container) {\r\n+                        handleDrop(e, targetElement);\r\n+                    }\r\n+                }\r\n             \r\n+                Array.from(container.children).forEach(function(box) {\r\n+                    // Mouse Events\r\n                     box.addEventListener('dragstart', handleDragStart);\r\n                     box.addEventListener('dragover', handleDragOver);\r\n-                    box.addEventListener('drop', handleDrop);\r\n                     box.addEventListener('dragend', handleDragEnd);\r\n+            \r\n+                    // Touch Events\r\n+                    box.addEventListener('touchstart', handleDragStart);\r\n+                    box.addEventListener('touchmove', handleTouchMove);\r\n+                    box.addEventListener('touchend', handleDragEnd);\r\n                 });\r\n             });\r\n             \r\n+            \r\n         </script>\r\n     </body>\r\n </html>\r\n"
                },
                {
                    "date": 1702752566805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n                         e.preventDefault(); // Necessary for allowing drop\r\n                     }\r\n                 }\r\n             \r\n-                function handleDrop(e, target) {\r\n+                function handleDrop(target) {\r\n                     if (dragSrcEl !== target) {\r\n                         let draggedIndex = Array.from(container.children).indexOf(dragSrcEl);\r\n                         let targetIndex = Array.from(container.children).indexOf(target);\r\n             \r\n@@ -76,26 +76,29 @@\n                     });\r\n                 }\r\n             \r\n                 function handleTouchMove(e) {\r\n+                    if (!isDragging) return;\r\n+            \r\n                     var touchLocation = e.targetTouches[0];\r\n                     var targetElement = document.elementFromPoint(touchLocation.clientX, touchLocation.clientY);\r\n             \r\n                     if (targetElement && targetElement !== dragSrcEl && targetElement.parentNode === container) {\r\n-                        handleDrop(e, targetElement);\r\n+                        handleDrop(targetElement);\r\n                     }\r\n                 }\r\n             \r\n                 Array.from(container.children).forEach(function(box) {\r\n                     // Mouse Events\r\n                     box.addEventListener('dragstart', handleDragStart);\r\n                     box.addEventListener('dragover', handleDragOver);\r\n                     box.addEventListener('dragend', handleDragEnd);\r\n+                    box.addEventListener('drop', (e) => handleDrop(e.target));\r\n             \r\n                     // Touch Events\r\n-                    box.addEventListener('touchstart', handleDragStart);\r\n-                    box.addEventListener('touchmove', handleTouchMove);\r\n-                    box.addEventListener('touchend', handleDragEnd);\r\n+                    box.addEventListener('touchstart', handleDragStart, {passive: true});\r\n+                    box.addEventListener('touchmove', handleTouchMove, {passive: false});\r\n+                    box.addEventListener('touchend', handleDragEnd, {passive: true});\r\n                 });\r\n             });\r\n             \r\n             \r\n"
                },
                {
                    "date": 1702752653955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,14 @@\n             background-color: green;\r\n             cursor: pointer;\r\n             border: 1px solid;\r\n         }\r\n+        .dragging {\r\n+            box-shadow: 0px 10px 20px rgba(0,0,0,0.2);\r\n+            transform: scale(1.05);\r\n+            z-index: 1000; /* Ensures the dragging element is above others */\r\n+        }\r\n+        \r\n     </style>\r\n     <body>\r\n         <div class=\"container\">\r\n             <div class=\"box1\"></div>\r\n"
                },
                {
                    "date": 1702752757688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,12 @@\n             height: 300px;\r\n             width: 200px;\r\n             background-color: gray;\r\n         }\r\n+        .container > div {\r\n+            transition: transform 0.3s ease-in-out;\r\n+        }\r\n+        \r\n         .box1 {\r\n             height: 150px;\r\n             width: 200px;\r\n             background-color: red;\r\n"
                },
                {
                    "date": 1702752789233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n             width: 200px;\r\n             background-color: gray;\r\n         }\r\n         .container > div {\r\n-            transition: transform 0.3s ease-in-out;\r\n+            transition: transform 1s ease-in-out;\r\n         }\r\n         \r\n         .box1 {\r\n             height: 150px;\r\n"
                },
                {
                    "date": 1702752796536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n             width: 200px;\r\n             background-color: gray;\r\n         }\r\n         .container > div {\r\n-            transition: transform 1s ease-in-out;\r\n+            transition: transform 0.3s ease-in-out;\r\n         }\r\n         \r\n         .box1 {\r\n             height: 150px;\r\n"
                },
                {
                    "date": 1702752815078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,9 @@\n     <body>\r\n         <div class=\"container\">\r\n             <div class=\"box1\"></div>\r\n             <div class=\"box2\"></div>\r\n+            <div class=\"box2\"></div>\r\n         </div>\r\n         <script>\r\n             document.addEventListener('DOMContentLoaded', function() {\r\n                 const container = document.querySelector('.container');\r\n"
                },
                {
                    "date": 1702752821280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     <body>\r\n         <div class=\"container\">\r\n             <div class=\"box1\"></div>\r\n             <div class=\"box2\"></div>\r\n-            <div class=\"box2\"></div>\r\n+            <div class=\"box3\"></div>\r\n         </div>\r\n         <script>\r\n             document.addEventListener('DOMContentLoaded', function() {\r\n                 const container = document.querySelector('.container');\r\n"
                },
                {
                    "date": 1702752828060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     <body>\r\n         <div class=\"container\">\r\n             <div class=\"box1\"></div>\r\n             <div class=\"box2\"></div>\r\n-            <div class=\"box3\"></div>\r\n+            <div class=\"box1\"></div>\r\n         </div>\r\n         <script>\r\n             document.addEventListener('DOMContentLoaded', function() {\r\n                 const container = document.querySelector('.container');\r\n"
                },
                {
                    "date": 1702753197738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     <body>\r\n         <div class=\"container\">\r\n             <div class=\"box1\"></div>\r\n             <div class=\"box2\"></div>\r\n-            <div class=\"box1\"></div>\r\n+            <div class=\"box3\"></div>\r\n         </div>\r\n         <script>\r\n             document.addEventListener('DOMContentLoaded', function() {\r\n                 const container = document.querySelector('.container');\r\n"
                },
                {
                    "date": 1702753204024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,15 @@\n             background-color: green;\r\n             cursor: pointer;\r\n             border: 1px solid;\r\n         }\r\n+        .box2 {\r\n+            height: 150px;\r\n+            width: 200px;\r\n+            background-color: blue;\r\n+            cursor: pointer;\r\n+            border: 1px solid;\r\n+        }\r\n         .dragging {\r\n             box-shadow: 0px 10px 20px rgba(0,0,0,0.2);\r\n             transform: scale(1.05);\r\n             z-index: 1000; /* Ensures the dragging element is above others */\r\n"
                },
                {
                    "date": 1702878224623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         }\r\n         .container > div {\r\n             transition: transform 0.3s ease-in-out;\r\n         }\r\n-        \r\n+\r\n         .box1 {\r\n             height: 150px;\r\n             width: 200px;\r\n             background-color: red;\r\n@@ -43,83 +43,100 @@\n             cursor: pointer;\r\n             border: 1px solid;\r\n         }\r\n         .dragging {\r\n-            box-shadow: 0px 10px 20px rgba(0,0,0,0.2);\r\n+            box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);\r\n             transform: scale(1.05);\r\n             z-index: 1000; /* Ensures the dragging element is above others */\r\n         }\r\n-        \r\n     </style>\r\n     <body>\r\n         <div class=\"container\">\r\n             <div class=\"box1\"></div>\r\n             <div class=\"box2\"></div>\r\n             <div class=\"box3\"></div>\r\n         </div>\r\n         <script>\r\n-            document.addEventListener('DOMContentLoaded', function() {\r\n-                const container = document.querySelector('.container');\r\n+            document.addEventListener(\"DOMContentLoaded\", function () {\r\n+                const container = document.querySelector(\".container\");\r\n                 let dragSrcEl = null;\r\n                 let isDragging = false;\r\n-            \r\n+\r\n                 function handleDragStart(e) {\r\n                     dragSrcEl = this;\r\n                     isDragging = true;\r\n-                    this.classList.add('dragging');\r\n+                    this.classList.add(\"dragging\");\r\n                 }\r\n-            \r\n+\r\n                 function handleDragOver(e) {\r\n                     if (isDragging) {\r\n                         e.preventDefault(); // Necessary for allowing drop\r\n                     }\r\n                 }\r\n-            \r\n+\r\n                 function handleDrop(target) {\r\n                     if (dragSrcEl !== target) {\r\n-                        let draggedIndex = Array.from(container.children).indexOf(dragSrcEl);\r\n-                        let targetIndex = Array.from(container.children).indexOf(target);\r\n-            \r\n+                        let draggedIndex = Array.from(\r\n+                            container.children\r\n+                        ).indexOf(dragSrcEl);\r\n+                        let targetIndex = Array.from(\r\n+                            container.children\r\n+                        ).indexOf(target);\r\n+\r\n                         if (draggedIndex < targetIndex) {\r\n-                            container.insertBefore(dragSrcEl, target.nextSibling);\r\n+                            container.insertBefore(\r\n+                                dragSrcEl,\r\n+                                target.nextSibling\r\n+                            );\r\n                         } else {\r\n                             container.insertBefore(dragSrcEl, target);\r\n                         }\r\n                     }\r\n                 }\r\n-            \r\n+\r\n                 function handleDragEnd() {\r\n                     isDragging = false;\r\n-                    Array.from(container.children).forEach(function(box) {\r\n-                        box.classList.remove('dragging');\r\n+                    Array.from(container.children).forEach(function (box) {\r\n+                        box.classList.remove(\"dragging\");\r\n                     });\r\n                 }\r\n-            \r\n+\r\n                 function handleTouchMove(e) {\r\n                     if (!isDragging) return;\r\n-            \r\n+\r\n                     var touchLocation = e.targetTouches[0];\r\n-                    var targetElement = document.elementFromPoint(touchLocation.clientX, touchLocation.clientY);\r\n-            \r\n-                    if (targetElement && targetElement !== dragSrcEl && targetElement.parentNode === container) {\r\n+                    var targetElement = document.elementFromPoint(\r\n+                        touchLocation.clientX,\r\n+                        touchLocation.clientY\r\n+                    );\r\n+\r\n+                    if (\r\n+                        targetElement &&\r\n+                        targetElement !== dragSrcEl &&\r\n+                        targetElement.parentNode === container\r\n+                    ) {\r\n                         handleDrop(targetElement);\r\n                     }\r\n                 }\r\n-            \r\n-                Array.from(container.children).forEach(function(box) {\r\n+\r\n+                Array.from(container.children).forEach(function (box) {\r\n                     // Mouse Events\r\n-                    box.addEventListener('dragstart', handleDragStart);\r\n-                    box.addEventListener('dragover', handleDragOver);\r\n-                    box.addEventListener('dragend', handleDragEnd);\r\n-                    box.addEventListener('drop', (e) => handleDrop(e.target));\r\n-            \r\n+                    box.addEventListener(\"dragstart\", handleDragStart);\r\n+                    box.addEventListener(\"dragover\", handleDragOver);\r\n+                    box.addEventListener(\"dragend\", handleDragEnd);\r\n+                    box.addEventListener(\"drop\", (e) => handleDrop(e.target));\r\n+\r\n                     // Touch Events\r\n-                    box.addEventListener('touchstart', handleDragStart, {passive: true});\r\n-                    box.addEventListener('touchmove', handleTouchMove, {passive: false});\r\n-                    box.addEventListener('touchend', handleDragEnd, {passive: true});\r\n+                    box.addEventListener(\"touchstart\", handleDragStart, {\r\n+                        passive: true,\r\n+                    });\r\n+                    box.addEventListener(\"touchmove\", handleTouchMove, {\r\n+                        passive: false,\r\n+                    });\r\n+                    box.addEventListener(\"touchend\", handleDragEnd, {\r\n+                        passive: true,\r\n+                    });\r\n                 });\r\n             });\r\n-            \r\n-            \r\n         </script>\r\n     </body>\r\n </html>\r\n"
                }
            ],
            "date": 1702453071977,
            "name": "Commit-0",
            "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Document</title>\r\n</head>\r\n<body>\r\n    \r\n</body>\r\n</html>"
        }
    ]
}